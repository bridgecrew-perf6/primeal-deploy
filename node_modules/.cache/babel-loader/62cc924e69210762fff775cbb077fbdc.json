{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst getScroll = () => window.pageYOffset || window.scrollY || document.documentElement.scrollTop;\n\nfunction useCurrentScroll() {\n  _s();\n\n  // save current window width in the state object\n  const [scroll, setScroll] = useState(getScroll()); // in this case useEffect will execute only once because\n  // it does not have any dependencies.\n\n  useEffect(() => {\n    // timeoutId for debounce mechanism\n    let timeoutId = null;\n\n    const resizeListener = () => {\n      // prevent execution of previous setTimeout\n      clearTimeout(timeoutId); // change width from the state object after 150 milliseconds\n\n      timeoutId = setTimeout(() => setScroll(getScroll()), 150);\n    }; // set resize listener\n\n\n    window.addEventListener('scroll', resizeListener); // clean up function\n\n    return () => {\n      // remove resize listener\n      window.removeEventListener('scroll', resizeListener);\n    };\n  }, []);\n  return scroll;\n}\n\n_s(useCurrentScroll, \"kIdFAN7wGVfUzvJxh5H8cG7TqR0=\");\n\nexport default useCurrentScroll;","map":{"version":3,"sources":["C:/Users/ryany/OneDrive/桌面/primeal/src/pages/share/hooks/useCurrentScroll.js"],"names":["useState","useEffect","getScroll","window","pageYOffset","scrollY","document","documentElement","scrollTop","useCurrentScroll","scroll","setScroll","timeoutId","resizeListener","clearTimeout","setTimeout","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,SAAS,GAAG,MAChBC,MAAM,CAACC,WAAP,IAAsBD,MAAM,CAACE,OAA7B,IAAwCC,QAAQ,CAACC,eAAT,CAAyBC,SADnE;;AAGA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAACE,SAAS,EAAV,CAApC,CAF0B,CAI1B;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIW,SAAS,GAAG,IAAhB;;AACA,UAAMC,cAAc,GAAG,MAAM;AAC3B;AACAC,MAAAA,YAAY,CAACF,SAAD,CAAZ,CAF2B,CAG3B;;AACAA,MAAAA,SAAS,GAAGG,UAAU,CAAC,MAAMJ,SAAS,CAACT,SAAS,EAAV,CAAhB,EAA+B,GAA/B,CAAtB;AACD,KALD,CAHc,CASd;;;AACAC,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkCH,cAAlC,EAVc,CAYd;;AACA,WAAO,MAAM;AACX;AACAV,MAAAA,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqCJ,cAArC;AACD,KAHD;AAID,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,SAAOH,MAAP;AACD;;GA1BQD,gB;;AA4BT,eAAeA,gBAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst getScroll = () =>\r\n  window.pageYOffset || window.scrollY || document.documentElement.scrollTop;\r\n\r\nfunction useCurrentScroll() {\r\n  // save current window width in the state object\r\n  const [scroll, setScroll] = useState(getScroll());\r\n\r\n  // in this case useEffect will execute only once because\r\n  // it does not have any dependencies.\r\n  useEffect(() => {\r\n    // timeoutId for debounce mechanism\r\n    let timeoutId = null;\r\n    const resizeListener = () => {\r\n      // prevent execution of previous setTimeout\r\n      clearTimeout(timeoutId);\r\n      // change width from the state object after 150 milliseconds\r\n      timeoutId = setTimeout(() => setScroll(getScroll()), 150);\r\n    };\r\n    // set resize listener\r\n    window.addEventListener('scroll', resizeListener);\r\n\r\n    // clean up function\r\n    return () => {\r\n      // remove resize listener\r\n      window.removeEventListener('scroll', resizeListener);\r\n    };\r\n  }, []);\r\n\r\n  return scroll;\r\n}\r\n\r\nexport default useCurrentScroll;\r\n"]},"metadata":{},"sourceType":"module"}