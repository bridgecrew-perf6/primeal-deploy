{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryany\\\\OneDrive\\\\\\u684C\\u9762\\\\primeal\\\\src\\\\pages\\\\chartjs\\\\ChartCs\\\\ChartForCm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport RadarChart from './RadarChart';\nimport MtlData from '../MtlData';\nimport nuData from '../nuData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChartForCm(props) {\n  _s();\n\n  const [data, setData] = useState([]); //當props改變時，data需重新賦值\n\n  useEffect(() => {\n    //將props裡的材料重新組成一個array\n    let mtlArray = [];\n\n    if (props.mtls.length === 1) {\n      //材料陣列內只有一個的話是電腦版的單點\n      mtlArray = props.mtls.map(m => +m);\n    } else {\n      //材料陣列內有多個的話是手機版的全材料一起呈現\n      mtlArray = props.mtls.map(m => +m);\n    }\n\n    const data = nuData.filter(i => {\n      return mtlArray.includes(i.mtl_id);\n    }).map(d => {\n      const colorA = Math.random() * 255;\n      const colorB = Math.random() * 255;\n      const colorC = Math.random() * 255;\n      return {\n        label: d.mtl_name,\n        data: MtlData.map(data => data[d.mtl_name]),\n        fill: true,\n        backgroundColor: `rgba(${colorA}, ${colorB}, ${colorC}, 0.4)`,\n        borderColor: `rgb(${colorA}, ${colorB}, ${colorC})`,\n        pointBackgroundColor: `rgb(${colorA}, ${colorB}, ${colorC})`,\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: `rgb(${colorA}, ${colorB}, ${colorC})`\n      };\n    });\n    setData(data);\n  }, [props.mtls]);\n  const [userData, setUserData] = useState({\n    labels: MtlData.map(data => data.nutrients),\n    datasets: data\n  });\n  useEffect(() => {\n    setUserData({\n      labels: MtlData.map(data => data.nutrients),\n      datasets: data\n    });\n  }, [data]);\n  const [options, setOptions] = useState({\n    legend: {\n      position: 'top',\n      display: true,\n      labels: {\n        fontColor: 'rgb(60, 180, 100)',\n        fontSize: '40px'\n      }\n    },\n    title: {\n      display: true,\n      text: 'Chart.js Radar Chart'\n    },\n    elements: {\n      line: {\n        borderWidth: 1\n      }\n    },\n    scale: {\n      r: {\n        beginAtZero: true,\n        min: 0,\n        max: 50\n      },\n      // angleLines: {\n      //   color: \"rgba(255, 255, 255, .3)\",\n      //   lineWidth: 1\n      // },\n      // gridLines: {\n      //   color: \"rgba(255, 255, 255, .3)\",\n      //   circular: true\n      // },\n      ticks: {\n        min: 0,\n        max: 50,\n        stepSize: 10,\n        showLabelBackdrop: false,\n        backdropColor: 'rgba(203, 197, 11, 1)'\n      }\n    },\n    plugins: {\n      font: {\n        weight: 'bold',\n        size: '26'\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(RadarChart, {\n    chartData: userData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ChartForCm, \"x9eAtS1zNmCWlDWPzHG+Wz/kYdE=\");\n\n_c = ChartForCm;\nexport default ChartForCm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartForCm\");","map":{"version":3,"sources":["C:/Users/ryany/OneDrive/桌面/primeal/src/pages/chartjs/ChartCs/ChartForCm.js"],"names":["React","useState","useEffect","RadarChart","MtlData","nuData","ChartForCm","props","data","setData","mtlArray","mtls","length","map","m","filter","i","includes","mtl_id","d","colorA","Math","random","colorB","colorC","label","mtl_name","fill","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","userData","setUserData","labels","nutrients","datasets","options","setOptions","legend","position","display","fontColor","fontSize","title","text","elements","line","borderWidth","scale","r","beginAtZero","min","max","ticks","stepSize","showLabelBackdrop","backdropColor","plugins","font","weight","size"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport RadarChart from './RadarChart';\r\nimport MtlData from '../MtlData';\r\nimport nuData from '../nuData';\r\n\r\nfunction ChartForCm(props) {\r\n  const [data, setData] = useState([]);\r\n\r\n  //當props改變時，data需重新賦值\r\n  useEffect(() => {\r\n    //將props裡的材料重新組成一個array\r\n    let mtlArray = [];\r\n    if (props.mtls.length === 1) {\r\n      //材料陣列內只有一個的話是電腦版的單點\r\n      mtlArray = props.mtls.map(m => +m);\r\n    } else {\r\n      //材料陣列內有多個的話是手機版的全材料一起呈現\r\n      mtlArray = props.mtls.map(m => +m);\r\n    }\r\n    const data = nuData\r\n      .filter(i => {\r\n        return mtlArray.includes(i.mtl_id);\r\n      })\r\n      .map(d => {\r\n        const colorA = Math.random() * 255;\r\n        const colorB = Math.random() * 255;\r\n        const colorC = Math.random() * 255;\r\n\r\n        return {\r\n          label: d.mtl_name,\r\n          data: MtlData.map(data => data[d.mtl_name]),\r\n          fill: true,\r\n          backgroundColor: `rgba(${colorA}, ${colorB}, ${colorC}, 0.4)`,\r\n          borderColor: `rgb(${colorA}, ${colorB}, ${colorC})`,\r\n          pointBackgroundColor: `rgb(${colorA}, ${colorB}, ${colorC})`,\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#fff',\r\n          pointHoverBorderColor: `rgb(${colorA}, ${colorB}, ${colorC})`,\r\n        };\r\n      });\r\n\r\n    setData(data);\r\n  }, [props.mtls]);\r\n\r\n  const [userData, setUserData] = useState({\r\n    labels: MtlData.map(data => data.nutrients),\r\n    datasets: data,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUserData({\r\n      labels: MtlData.map(data => data.nutrients),\r\n      datasets: data,\r\n    });\r\n  }, [data]);\r\n\r\n  const [options, setOptions] = useState({\r\n    legend: {\r\n      position: 'top',\r\n      display: true,\r\n      labels: {\r\n        fontColor: 'rgb(60, 180, 100)',\r\n        fontSize: '40px',\r\n      },\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: 'Chart.js Radar Chart',\r\n    },\r\n    elements: {\r\n      line: {\r\n        borderWidth: 1,\r\n      },\r\n    },\r\n    scale: {\r\n      r: {\r\n        beginAtZero: true,\r\n        min: 0,\r\n        max: 50,\r\n      },\r\n      // angleLines: {\r\n      //   color: \"rgba(255, 255, 255, .3)\",\r\n      //   lineWidth: 1\r\n      // },\r\n      // gridLines: {\r\n      //   color: \"rgba(255, 255, 255, .3)\",\r\n      //   circular: true\r\n      // },\r\n      ticks: {\r\n        min: 0,\r\n        max: 50,\r\n        stepSize: 10,\r\n        showLabelBackdrop: false,\r\n        backdropColor: 'rgba(203, 197, 11, 1)',\r\n      },\r\n    },\r\n    plugins: {\r\n      font: {\r\n        weight: 'bold',\r\n        size: '26',\r\n      },\r\n    },\r\n  });\r\n\r\n  return <RadarChart chartData={userData} options={options} />;\r\n}\r\n\r\nexport default ChartForCm;\r\n"]},"metadata":{},"sourceType":"module"}