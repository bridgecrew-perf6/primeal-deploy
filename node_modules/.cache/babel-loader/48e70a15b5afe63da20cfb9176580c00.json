{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst getWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\nfunction useCurrentWidth() {\n  _s();\n\n  // save current window width in the state object\n  const [width, setWidth] = useState(getWidth()); // in this case useEffect will execute only once because\n  // it does not have any dependencies.\n\n  useEffect(() => {\n    // timeoutId for debounce mechanism\n    let timeoutId = null;\n\n    const resizeListener = () => {\n      // prevent execution of previous setTimeout\n      clearTimeout(timeoutId); // change width from the state object after 150 milliseconds\n\n      timeoutId = setTimeout(() => setWidth(getWidth()), 150);\n    }; // set resize listener\n\n\n    window.addEventListener('resize', resizeListener); // clean up function\n\n    return () => {\n      // remove resize listener\n      window.removeEventListener('resize', resizeListener);\n    };\n  }, []);\n  return width;\n}\n\n_s(useCurrentWidth, \"Vn8IUDjB2XzwPuYK/dvmnbY5A4s=\");\n\nexport default useCurrentWidth;","map":{"version":3,"sources":["C:/Users/ryany/OneDrive/桌面/primeal/src/pages/share/hooks/useCurrentWidth.js"],"names":["useState","useEffect","getWidth","window","innerWidth","document","documentElement","clientWidth","body","useCurrentWidth","width","setWidth","timeoutId","resizeListener","clearTimeout","setTimeout","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,MACfC,MAAM,CAACC,UAAP,IACAC,QAAQ,CAACC,eAAT,CAAyBC,WADzB,IAEAF,QAAQ,CAACG,IAAT,CAAcD,WAHhB;;AAKA,SAASE,eAAT,GAA2B;AAAA;;AACzB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACE,QAAQ,EAAT,CAAlC,CAFyB,CAIzB;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIW,SAAS,GAAG,IAAhB;;AACA,UAAMC,cAAc,GAAG,MAAM;AAC3B;AACAC,MAAAA,YAAY,CAACF,SAAD,CAAZ,CAF2B,CAG3B;;AACAA,MAAAA,SAAS,GAAGG,UAAU,CAAC,MAAMJ,QAAQ,CAACT,QAAQ,EAAT,CAAf,EAA6B,GAA7B,CAAtB;AACD,KALD,CAHc,CASd;;;AACAC,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkCH,cAAlC,EAVc,CAYd;;AACA,WAAO,MAAM;AACX;AACAV,MAAAA,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqCJ,cAArC;AACD,KAHD;AAID,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,SAAOH,KAAP;AACD;;GA1BQD,e;;AA4BT,eAAeA,eAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst getWidth = () =>\r\n  window.innerWidth ||\r\n  document.documentElement.clientWidth ||\r\n  document.body.clientWidth;\r\n\r\nfunction useCurrentWidth() {\r\n  // save current window width in the state object\r\n  const [width, setWidth] = useState(getWidth());\r\n\r\n  // in this case useEffect will execute only once because\r\n  // it does not have any dependencies.\r\n  useEffect(() => {\r\n    // timeoutId for debounce mechanism\r\n    let timeoutId = null;\r\n    const resizeListener = () => {\r\n      // prevent execution of previous setTimeout\r\n      clearTimeout(timeoutId);\r\n      // change width from the state object after 150 milliseconds\r\n      timeoutId = setTimeout(() => setWidth(getWidth()), 150);\r\n    };\r\n    // set resize listener\r\n    window.addEventListener('resize', resizeListener);\r\n\r\n    // clean up function\r\n    return () => {\r\n      // remove resize listener\r\n      window.removeEventListener('resize', resizeListener);\r\n    };\r\n  }, []);\r\n\r\n  return width;\r\n}\r\n\r\nexport default useCurrentWidth;\r\n"]},"metadata":{},"sourceType":"module"}