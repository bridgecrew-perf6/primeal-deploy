{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryany\\\\OneDrive\\\\\\u684C\\u9762\\\\primeal\\\\src\\\\pages\\\\share\\\\Scene.js\",\n    _s = $RefreshSig$();\n\n// import * as THREE from 'three';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { RoundedBox, useTexture } from '@react-three/drei'; // import { TextureLoader } from 'three/src/loaders/TextureLoader';\n\nimport { useSpring } from '@react-spring/core';\nimport { a } from '@react-spring/three'; // All textures are CC0 textures from: https://cc0textures.com/\n// const name = type => `PavingStones092_1K_${type}.jpg`;\n// 單層材料層\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Scene(props) {\n  _s();\n\n  const {\n    sushi,\n    index,\n    sushiGroup,\n    setSushiGroup,\n    isChange,\n    setIsChange\n  } = props;\n  const {\n    map,\n    normalMap,\n    height,\n    alt,\n    fixIndex\n  } = sushi; // const [active, setActive] = useState(0);\n\n  const mesh = useRef();\n  const [img, normalImg] = useTexture([map, normalMap]); // 用 react-spring 套件新增材料動畫\n\n  const {\n    position\n  } = useSpring({\n    from: {\n      position: [0, fixIndex / 8 + alt + 0.125, 0]\n    },\n    to: async next => {\n      if (active) {\n        await next({\n          position: [0, fixIndex / 8 + alt, 0]\n        });\n      }\n    },\n    config: {\n      mass: 5,\n      tension: 400,\n      friction: 50,\n      precision: 0.0001\n    }\n  }); // img.wrapS = THREE.RepeatWrapping; //調整材質的大小\n  // img.wrapT = THREE.RepeatWrapping;\n  // img.repeat.set(1, 1); // 數字越大 單張圖片材質本身越小 重複的次數越多\n  // normalImg.wrapS = THREE.RepeatWrapping;\n  // normalImg.wrapT = THREE.RepeatWrapping;\n  // normalImg.repeat.set(1, 1);\n\n  useFrame(state => {\n    const t = state.clock.getElapsedTime(); // mesh.current.rotation.z = -0.2 - (1 + Math.sin(t / 1.5)) / 20;\n    // mesh.current.rotation.x = Math.cos(t / 4) / 8;\n\n    mesh.current.rotation.y = Math.sin(t / 4) / 8; // mesh.current.position.y = (1 + Math.sin(t / 1.5)) / 10 + fixIndex / 2 + alt; //Y軸上下移動\n  }); // console.log(mesh.current?.position.y);\n  // const [img, normalImg] = useLoader(TextureLoader, [map, normalMap]);\n  // const [\n  //   colorMap,\n  //   displacementMap,\n  //   normalMap,\n  //   roughnessMap,\n  //   aoMap\n  // ] = useTexture([\n  //   name(\"Color\"),\n  //   name(\"Displacement\"),\n  //   name(\"Normal\"),\n  //   name(\"Roughness\"),\n  //   name(\"AmbientOcclusion\")\n  // ]);\n  // const changeHeightIndexHandler = () => {\n  //   setIsChange([...isChange, index]);\n  // };\n  // useEffect(() => {\n  //   if (index === sushiGroup.length - 1) setActive(Number(!active));\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(a.mesh, {\n      ref: mesh // position={[0, fixIndex / 2 + alt, 0]}\n      ,\n      position: position,\n      onClick: () => {\n        changeHeightIndexHandler(); // setSushiGroup(() => {\n        //   let returnGroup = [...sushiGroup];\n        //   returnGroup.splice(index, 1);\n        //   return returnGroup;\n        // });\n      },\n      children: /*#__PURE__*/_jsxDEV(RoundedBox, {\n        args: [1, height, 1],\n        radius: 0.04,\n        smoothness: 4,\n        children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          attach: \"material\",\n          normalScale: 1,\n          map: img,\n          normalMap: normalImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Scene, \"k1fd/RmzSpuM5WFQEvE0maZuYV8=\", false, function () {\n  return [useTexture, useSpring, useFrame];\n});\n\n_c = Scene;\nexport default Scene;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"sources":["C:/Users/ryany/OneDrive/桌面/primeal/src/pages/share/Scene.js"],"names":["React","useEffect","useState","useRef","useFrame","RoundedBox","useTexture","useSpring","a","Scene","props","sushi","index","sushiGroup","setSushiGroup","isChange","setIsChange","map","normalMap","height","alt","fixIndex","mesh","img","normalImg","position","from","to","next","active","config","mass","tension","friction","precision","state","t","clock","getElapsedTime","current","rotation","y","Math","sin","changeHeightIndexHandler"],"mappings":"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","sourcesContent":["// import * as THREE from 'three';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport { RoundedBox, useTexture } from '@react-three/drei';\r\n// import { TextureLoader } from 'three/src/loaders/TextureLoader';\r\nimport { useSpring } from '@react-spring/core';\r\nimport { a } from '@react-spring/three';\r\n// All textures are CC0 textures from: https://cc0textures.com/\r\n// const name = type => `PavingStones092_1K_${type}.jpg`;\r\n\r\n// 單層材料層\r\nfunction Scene(props) {\r\n  const { sushi, index, sushiGroup, setSushiGroup, isChange, setIsChange } =\r\n    props;\r\n  const { map, normalMap, height, alt, fixIndex } = sushi;\r\n  // const [active, setActive] = useState(0);\r\n  const mesh = useRef();\r\n  const [img, normalImg] = useTexture([map, normalMap]);\r\n\r\n  // 用 react-spring 套件新增材料動畫\r\n  const { position } = useSpring({\r\n    from: { position: [0, fixIndex / 8 + alt + 0.125, 0] },\r\n    to: async next => {\r\n      if (active) {\r\n        await next({ position: [0, fixIndex / 8 + alt, 0] });\r\n      }\r\n    },\r\n    config: { mass: 5, tension: 400, friction: 50, precision: 0.0001 },\r\n  });\r\n\r\n  // img.wrapS = THREE.RepeatWrapping; //調整材質的大小\r\n  // img.wrapT = THREE.RepeatWrapping;\r\n  // img.repeat.set(1, 1); // 數字越大 單張圖片材質本身越小 重複的次數越多\r\n  // normalImg.wrapS = THREE.RepeatWrapping;\r\n  // normalImg.wrapT = THREE.RepeatWrapping;\r\n  // normalImg.repeat.set(1, 1);\r\n\r\n  useFrame(state => {\r\n    const t = state.clock.getElapsedTime();\r\n    // mesh.current.rotation.z = -0.2 - (1 + Math.sin(t / 1.5)) / 20;\r\n    // mesh.current.rotation.x = Math.cos(t / 4) / 8;\r\n    mesh.current.rotation.y = Math.sin(t / 4) / 8;\r\n    // mesh.current.position.y = (1 + Math.sin(t / 1.5)) / 10 + fixIndex / 2 + alt; //Y軸上下移動\r\n  });\r\n  // console.log(mesh.current?.position.y);\r\n  // const [img, normalImg] = useLoader(TextureLoader, [map, normalMap]);\r\n  // const [\r\n  //   colorMap,\r\n  //   displacementMap,\r\n  //   normalMap,\r\n  //   roughnessMap,\r\n  //   aoMap\r\n  // ] = useTexture([\r\n  //   name(\"Color\"),\r\n  //   name(\"Displacement\"),\r\n  //   name(\"Normal\"),\r\n  //   name(\"Roughness\"),\r\n  //   name(\"AmbientOcclusion\")\r\n  // ]);\r\n\r\n  // const changeHeightIndexHandler = () => {\r\n  //   setIsChange([...isChange, index]);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   if (index === sushiGroup.length - 1) setActive(Number(!active));\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      <a.mesh\r\n        ref={mesh}\r\n        // position={[0, fixIndex / 2 + alt, 0]}\r\n        position={position}\r\n        onClick={() => {\r\n          changeHeightIndexHandler();\r\n          // setSushiGroup(() => {\r\n          //   let returnGroup = [...sushiGroup];\r\n          //   returnGroup.splice(index, 1);\r\n          //   return returnGroup;\r\n          // });\r\n        }}\r\n      >\r\n        {/* Width and height segments for displacementMap */}\r\n        {/* <sphereBufferGeometry args={[0.5, 100, 100]} />\r\n        <meshStandardMaterial\r\n          displacementScale={0.2}\r\n          map={img}\r\n          normalMap={normalImg}\r\n        /> */}\r\n\r\n        <RoundedBox args={[1, height, 1]} radius={0.04} smoothness={4}>\r\n          <meshStandardMaterial\r\n            attach=\"material\"\r\n            normalScale={1}\r\n            map={img}\r\n            normalMap={normalImg}\r\n          />\r\n        </RoundedBox>\r\n      </a.mesh>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Scene;\r\n"]},"metadata":{},"sourceType":"module"}